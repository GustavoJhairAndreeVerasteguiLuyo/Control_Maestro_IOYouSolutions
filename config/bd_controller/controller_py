import psycopg2
from psycopg2 import sql

class ClienteController:
    def __init__(self, db_config):
        self.connection = psycopg2.connect(**db_config)
        self.connection.autocommit = True

    def crear_cliente(self, nombre, direccion, telefono, email):
        with self.connection.cursor() as cursor:
            query = """
            INSERT INTO clientes (nombre, direccion, telefono, email)
            VALUES (%s, %s, %s, %s)
            RETURNING id;
            """
            cursor.execute(query, (nombre, direccion, telefono, email))
            cliente_id = cursor.fetchone()[0]
            return cliente_id

    def obtener_cliente(self, cliente_id):
        with self.connection.cursor() as cursor:
            query = "SELECT id, nombre, direccion, telefono, email, creado_en FROM clientes WHERE id = %s;"
            cursor.execute(query, (cliente_id,))
            cliente = cursor.fetchone()
            return cliente

    def actualizar_cliente(self, cliente_id, nombre=None, direccion=None, telefono=None, email=None):
        with self.connection.cursor() as cursor:
            campos = []
            valores = []

            if nombre:
                campos.append("nombre = %s")
                valores.append(nombre)
            if direccion:
                campos.append("direccion = %s")
                valores.append(direccion)
            if telefono:
                campos.append("telefono = %s")
                valores.append(telefono)
            if email:
                campos.append("email = %s")
                valores.append(email)

            if not campos:
                return False  # No hay datos para actualizar

            valores.append(cliente_id)
            query = sql.SQL("UPDATE clientes SET {} WHERE id = %s;").format(
                sql.SQL(", ").join(map(sql.SQL, campos))
            )
            cursor.execute(query, valores)
            return True

    def eliminar_cliente(self, cliente_id):
        with self.connection.cursor() as cursor:
            query = "DELETE FROM clientes WHERE id = %s;"
            cursor.execute(query, (cliente_id,))
            return cursor.rowcount > 0

    def listar_clientes(self):
        with self.connection.cursor() as cursor:
            query = "SELECT id, nombre, direccion, telefono, email, creado_en FROM clientes ORDER BY creado_en DESC;"
            cursor.execute(query)
            clientes = cursor.fetchall()
            return clientes

    def cerrar_conexion(self):
        self.connection.close()
